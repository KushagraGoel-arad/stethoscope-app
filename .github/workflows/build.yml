name: Package application

on:
  push:
    branches:
      - 'dhananjay-build-test'

jobs:
  build-and-package-macos:
    # if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'macos' }}
    outputs: 
      version_number: ${{ steps.extract_version.outputs.version}}
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: goSprinto/stethoscope-app
          ref: ${{ github.event.inputs.stethoscope_repo_branch_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # - name: Install dependencies
      #   run: yarn install

      # - name: Cache dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       node_modules
      #       ${{ runner.home }}/.cache/electron
      #       ${{ runner.home }}/.cache/electron-builder
      #     key: macos-latest-dependencies-${{ hashFiles('**/yarn.lock') }}

      # - name: Build and Package for macOS
      #   run: |
      #     yarn run-s prebuild 'build:electron -m --x64 --arm64'
     

      - name: Codesign executable
        env: 
          MACOS_CERTIFICATE: ${{ secrets.MACP12 }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.NOTERYPASSWORD }}
        run: |
          base64 -d <<< "$MACOS_CERTIFICATE" > certificate.p12
          security create-keychain -p Test123 build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p Test123 build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k Test123 build.keychain
          /usr/bin/codesign --force -s <identity-id> ./dist -v
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dist-macos
          path: dist
          
      - name: Get version from package.json
        id: extract_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT  
  
 
            
  upload-to-s3-macos:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'macos' }} 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [build-and-package-macos]
    
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::426216900398:role/github-actions-sprinto-repo-role
          aws-region: us-west-1
    
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: Dist-*
          merge-multiple: true      
          
      - name: Push artifacts to S3
        run: |
            mkdir artifacts && \
            cp dist/*.{yml,dmg} artifacts/ && \
            aws s3 sync artifacts s3://drsprinto-build/${{ needs.build-and-package-macos.outputs.version_number }}/

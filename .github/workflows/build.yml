name: Package application

on:
  push:
    branches:
      - 'dhananjay-build-test'


jobs:


  build-and-package-windows:
    # if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'windows' }}
    outputs: 
      version_number: ${{ steps.extract_version.outputs.version}}
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: goSprinto/stethoscope-app
          ref: 'dhananjay-build-test'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ${{ runner.home }}/.cache/electron
            ${{ runner.home }}/.cache/electron-builder
          key: windows-latest-dependencies-${{ hashFiles('**/yarn.lock') }}

      - name: Build and Package for Windows
        run: |
          yarn build:windows
      
      - name: Install Windows SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
        with:
          sdk-version: 22621
          
      - name: Signing the executables
        uses: skymatic/code-sign-action@v1
        with:
          certificate: '${{ secrets.P12FILE }}'
          password: '${{ secrets.PASSWORD }}'
          certificatesha1: '${{ secrets.SHA1KEY }}'
          folder: 'dist'
          
      - name: View Certificate Contents
        run: Get-Content "C:\Users\RUNNER~1\AppData\Local\Temp\certificate.pfx"
          
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Dist-windows
          path: dist
      - name: Get version from package.json
        id: extract_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT  
            
  upload-to-s3-windows:
    if: ${{ github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'windows' }} 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [build-and-package-windows]
    
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::426216900398:role/github-actions-sprinto-repo-role
          aws-region: us-west-1
    
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: Dist-*
          merge-multiple: true
          
      - name: Push artifacts to S3
        run: |
            mkdir artifacts && \
            cp dist/*.{yml,exe} artifacts/ && \
            aws s3 sync artifacts s3://drsprinto-build/${{ needs.build-and-package-windows.outputs.version_number }}/  
            
  
